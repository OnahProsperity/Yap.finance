{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","utils/contractHelpers.ts","views/Profile/components/HeaderWrapper.tsx","hooks/useGetWalletNfts.ts","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/ProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","getPancakeRabbitContract","pancakeRabbitsAbi","getPancakeRabbitsAddress","getRabbitMintingContract","rabbitMintingFarmAbi","getRabbitMintingFarmAddress","HeaderWrapper","styled","div","theme","colors","textSubtle","pancakeRabbitsContract","initialState","isLoading","nfts","reducer","state","action","type","data","useGetWalletNfts","useReducer","dispatch","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","ComingSoon","children","TranslateString","useI18n","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","isInitialized","currentStep","teamId","userName","minimumCakeRequired","multipliedBy","pow","step","ProfileCreationContext","createContext","ProfileCreationProvider","mintingContract","hasClaimed","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","map","WalletNotConnected","UnlockButton","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","handlePreApprove","useRef","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","handleConfirm","useHasCakeBalance","minimumBalance","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","Button","UIKitButton","mediaQueries","md","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","py","onClick","undefined","useProfileCreation","starterBunnyIds","nftList","filter","nft","includes","Mint","setBunnyId","useCake","mintingFarmContract","useRabbitMintingFarm","hasMinimumCakeRequired","response","currentAllowance","approve","toJSON","send","from","mintNFT","images","parseInt","mt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","toastError","useToast","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","users","toLocaleString","ContributeModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","profileApiUrl","process","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","ConfirmProfileCreationModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","Steps","TeamSelection","ProfileCreation","Page","ProfileHeader","Menu","activeIndex","variant","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","img","CollectibleCard","lg","description","CollectibleList","sm","Collectibles","tokenIdsInWallet","nftInWallet","TeamAvatar","card","background","AvatarWrapper","bg","ProfileAvatar","profile","alt","Content","Username","Heading","Status","ResponsiveText","AddressLink","PublicProfile","href","external","isActive","startIcon","outline","PrizeIcon","points","Profile","hasProfile","PageLoader","exact","path"],"mappings":"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","file":"static/js/6.4998f453.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { getPancakeProfileAddress, getPancakeRabbitsAddress, getRabbitMintingFarmAddress } from 'utils/addressHelpers'\r\nimport { getContract } from 'utils/web3'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport rabbitMintingFarmAbi from 'config/abi/rabbitmintingfarm.json'\r\n\r\nexport const getProfileContract = () => {\r\n  return getContract(profileABI, getPancakeProfileAddress())\r\n}\r\n\r\nexport const getPancakeRabbitContract = () => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\r\n}\r\n\r\nexport const getRabbitMintingContract = () => {\r\n  return getContract(rabbitMintingFarmAbi, getRabbitMintingFarmAddress())\r\n}\r\n\r\nexport default null\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst pancakeRabbitsContract = getPancakeRabbitContract()\r\n\r\nexport type NftMap = {\r\n  [key: number]: {\r\n    tokenUri: string\r\n    tokenIds: number[]\r\n  }\r\n}\r\n\r\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' }\r\n\r\ntype State = {\r\n  isLoading: boolean\r\n  nfts: NftMap\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: true,\r\n  nfts: {},\r\n}\r\n\r\nconst reducer = (state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'set_nfts':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n        nfts: action.data,\r\n      }\r\n    case 'reset':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useGetWalletNfts = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWallet()\r\n\r\n  useEffect(() => {\r\n    const fetchNfts = async () => {\r\n      try {\r\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\r\n\r\n        if (balanceOf > 0) {\r\n          let nfts: NftMap = {}\r\n\r\n          const getTokenIdAndBunnyId = async (index: number) => {\r\n            try {\r\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\r\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\r\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\r\n\r\n              return [Number(bunnyId), Number(tokenId), tokenUri]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [bunnyId, tokenId, tokenUri] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [bunnyId]: {\r\n                tokenUri,\r\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\r\n              },\r\n            }\r\n          }, {})\r\n\r\n          dispatch({ type: 'set_nfts', data: nfts })\r\n        } else {\r\n          // Reset it in case of wallet change\r\n          dispatch({ type: 'reset' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'reset' })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchNfts()\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetWalletNfts\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n        {children || TranslateString(999, 'Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap-libs/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useToast } from 'state/hooks'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport debounce from 'lodash/debounce'\r\nimport useProfileCreation from './contexts/hook'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst MIN_LENGTH = 3\r\nconst MAX_LENGTH = 15\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeBalance = 1\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\r\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { account, ethereum } = useWallet()\r\n  const { toastError } = useToast()\r\n  const web3 = useWeb3()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalance)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      tokenId={tokenId}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid?username=${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const provider = ethereum as any\r\n      const signature = provider?.bnbSign\r\n        ? (await provider.bnbSign(account, userName))?.signature\r\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\r\n\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users?address=${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(`Created ${dateCreated} ago`)\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError('Error: Unable to verify username')\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${4}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(999, 'Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(\r\n          999,\r\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\r\n        )}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(999, 'Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              999,\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={MIN_LENGTH}\r\n                maxLength={MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={TranslateString(999, 'Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {TranslateString(\r\n              999,\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\r\n              </div>\r\n              <Text ml=\"8px\">\r\n                {TranslateString(999, 'I understand that people can view my wallet if they know my username')}\r\n              </Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {TranslateString(999, 'Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\r\n        {TranslateString(999, 'Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {TranslateString(999, `A minimum of ${minimumCakeBalance} CAKE is required`)}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { getRabbitMintingContract } from 'utils/contractHelpers'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  tokenId: null,\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(5).multipliedBy(new BigNumber(10).pow(18)), // 5 CAKE\r\n  allowance: new BigNumber(25).multipliedBy(new BigNumber(10).pow(18)), // 25 CAKE\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_tokenid':\r\n      return {\r\n        ...state,\r\n        tokenId: action.tokenId,\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWallet()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const mintingContract = getRabbitMintingContract()\r\n      const hasClaimed = await mintingContract.methods.hasClaimed(account).call()\r\n\r\n      dispatch({ type: 'initialize', step: hasClaimed ? 1 : 0 })\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = [\r\n  { translationId: 999, label: 'Get Starter Collectible' },\r\n  { translationId: 999, label: 'Set Profile Picture' },\r\n  { translationId: 999, label: 'Join Team' },\r\n  { translationId: 999, label: 'Set Name' },\r\n]\r\n\r\nconst Header: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {TranslateString(999, 'Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\r\n        {TranslateString(999, 'Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, 'Total cost: 5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map(({ translationId, label }, index) => {\r\n          return (\r\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {TranslateString(translationId, label)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Heading size=\"xl\" mb=\"8px\">\r\n        {TranslateString(999, 'Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {TranslateString(999, 'Please connect your wallet to continue')}\r\n      </Text>\r\n      <UnlockButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWallet()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance) => {\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\r\n      <Button\r\n        disabled={isApproveDisabled}\r\n        onClick={onApprove}\r\n        endIcon={isApproving ? spinnerIcon : undefined}\r\n        isLoading={isApproving}\r\n      >\r\n        {isApproving ? TranslateString(999, 'Approving') : TranslateString(999, 'Approve')}\r\n      </Button>\r\n      <ChevronRight />\r\n      <ChevronBottom />\r\n      <Button\r\n        onClick={onConfirm}\r\n        disabled={isConfirmDisabled}\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? spinnerIcon : undefined}\r\n      >\r\n        {isConfirming ? TranslateString(999, 'Confirming') : TranslateString(999, 'Confirm')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useRabbitMintingFarm } from 'hooks/useContract'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst starterBunnyIds = [5, 6, 7, 8, 9]\r\nconst nfts = nftList.filter((nft) => starterBunnyIds.includes(nft.bunnyId))\r\nconst minimumCakeBalance = 4\r\n\r\nconst Mint: React.FC = () => {\r\n  const [bunnyId, setBunnyId] = useState(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { account } = useWallet()\r\n  const cakeContract = useCake()\r\n  const mintingFarmContract = useRabbitMintingFarm()\r\n  const TranslateString = useI18n()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalance)\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      // TODO: Move this to a helper, this check will be probably be used many times\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, mintingFarmContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods\r\n        .approve(mintingFarmContract.options.address, allowance.toJSON())\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return mintingFarmContract.methods.mintNFT(bunnyId).send({ from: account })\r\n    },\r\n    onSuccess: () => actions.nextStep(),\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${1}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(999, 'Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{TranslateString(999, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{TranslateString(999, 'This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(999, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(999, 'Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Cost: 4 CAKE')}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.bunnyId}\r\n                name=\"mintStarter\"\r\n                value={nft.bunnyId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={bunnyId === nft.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mt=\"16px\">\r\n              {TranslateString(999, `A minimum of ${minimumCakeBalance} CAKE is required`)}\r\n            </Text>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {TranslateString(999, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport nftList from 'config/constants/nfts'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { tokenId, actions } = useContext(ProfileCreationContext)\r\n  const TranslateString = useI18n()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const { account } = useWallet()\r\n  const { toastError } = useToast()\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  const handleApprove = () => {\r\n    pancakeRabbitsContract.methods\r\n      .approve(getPancakeProfileAddress(), tokenId)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsApproving(false)\r\n        setIsApproved(true)\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!isLoading && walletNfts.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(999, 'Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {TranslateString(999, 'We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {TranslateString(\r\n            999,\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${2}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(999, 'Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(999, 'Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(\r\n              999,\r\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\r\n            )}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(999, 'Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/nft\" style={{ marginLeft: '4px' }}>\r\n              {TranslateString(999, 'See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              walletNfts.map((walletNft) => {\r\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.bunnyId}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === tokenId}\r\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(999, 'Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {TranslateString(\r\n              999,\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {TranslateString(999, 'Approve')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\r\n        {TranslateString(999, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\ninterface Team {\r\n  name: string\r\n  description: string\r\n  isJoinable: boolean\r\n}\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${3}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(999, 'Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(999, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(999, 'Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              999,\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {TranslateString(999, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { useToast } from 'state/hooks'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\n\r\ninterface Props {\r\n  userName: string\r\n  tokenId: number\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ account, teamId, tokenId, minimumCakeRequired, allowance, onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n  const profileContract = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const dispatch = useDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return profileContract.methods\r\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\r\n        .send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      await dispatch(fetchProfile(account))\r\n      onDismiss()\r\n      toastSuccess('Profile created!')\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{TranslateString(999, 'Cost')}</Text>\r\n        <Text>{TranslateString(999, '1 CAKE')}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import { Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport React from 'react'\r\nimport HeaderWrapper from './HeaderWrapper'\r\n\r\nconst ProfileHeader = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n        {TranslateString(999, 'Your Profile')}\r\n      </Heading>\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\r\n        {TranslateString(999, 'Check your stats and collect achievements')}\r\n      </Heading>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import useI18n from 'hooks/useI18n'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{TranslateString(999, 'Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" size=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {TranslateString(999, 'Public Profile')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {TranslateString(999, 'Task Center')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport React from 'react'\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(999, 'Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(999, 'Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">\r\n                {TranslateString(999, 'Collecting points for these tasks makes them available again.')}\r\n              </Text>\r\n            </div>\r\n            <Button disabled>{TranslateString(999, 'Collect')}</Button>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(999, 'Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(999, 'Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n            <Button disabled>{TranslateString(999, 'Collect')}</Button>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Heading as=\"h5\" size=\"sm\" mb=\"8px\">\r\n        {nft.name}\r\n      </Heading>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport useI18n from 'hooks/useI18n'\r\nimport nfts from 'config/constants/nfts'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const TranslateString = useI18n()\r\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\r\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\r\n        {TranslateString(999, 'Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\r\n        )}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {TranslateString(999, 'No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/nft\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 0px;\r\n  width: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n    height: 48px;\r\n    width: 48px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  margin-right: 16px;\r\n  position: relative;\r\n  width: 64px;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft.images.md}`}>\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useProfile } from 'state/hooks'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport ComingSoon from './components/ComingSoon'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport ProfileAvatar from './components/ProfileAvatar'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWallet()\r\n  const { profile } = useProfile()\r\n  const TranslateString = useI18n()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <ProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Username>{`@${profile.username}`}</Username>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\r\n                    {account}\r\n                  </AddressLink>\r\n                  <OpenNewIcon ml=\"4px\" />\r\n                </Flex>\r\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            {profile.isActive && (\r\n              <Status>\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {TranslateString(999, 'Active')}\r\n                </Tag>\r\n              </Status>\r\n            )}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\r\n            <Heading as=\"h4\" size=\"md\">\r\n              {TranslateString(999, 'Achievements')}\r\n            </Heading>\r\n            <ComingSoon />\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport Page from 'components/layout/Page'\r\nimport PageLoader from 'components/PageLoader'\r\nimport { useProfile } from 'state/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWallet()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}